#!/usr/bin/env bash

# OrgMode Worklog appender
#
# This supersedes [Worklogger](https://github.com/bascht/worklogger)
# by appending to [OrgMode](https://github.com/bastibe/org-journal)
# via a scratchpad Window in the background

WORKLOG_CRITERIA='select(.window_properties.class=="Emacs" and .name == "Worklog")'

get_worklog_window () {
   swaymsg -t get_tree | jq -e -r "recurse(.nodes[],.floating_nodes[]) | ${WORKLOG_CRITERIA}.id"
}
get_scratchpad_worklog() {
   swaymsg -t get_tree | jq -r "recurse(.nodes[]?)|recurse(.floating_nodes[]?)|select(.name == \"__i3_scratch\").floating_nodes[] | ${WORKLOG_CRITERIA}${1}"
}

if [ -z "$(get_worklog_window)" ]; then
  echo "No worklog, need to start instance"
  emacs --name Worklog --eval="(bascht/worklog)" &
  exit 0
else
  get_scratchpad_worklog ".id"
  if [ -n "$(get_scratchpad_worklog)" ]; then
  echo "Worklog is in scratchpad, bringing it back"
  ID=$(get_scratchpad_worklog ".id")
  swaymsg "[con_id=${ID}]" scratchpad show
  else
    echo "Worklog is already visible"
  fi;
fi
